---------------

Versão de Prototype_case6:

Critério de Particionamento do Espaço de Soluções:
	- Divisão de solução em duas subsoluções. Uma com xi invertido
	e outra com xi sem alteração.
	
Critério para Percorrer Subconjuntos do espaço de soluções.
	- Dado um conjunto inicial de subconjuntos,
	em xi de 1 a quant(x) particionar, avaliar e cortar soluções ruins.

Relaxações:
	- Soma de todos os coeficientes positivos possíveis ainda.
	
Método para obter uma "boa" solução viável:
	- Usar best fit para descobrir o maior coeficiente de quant(x) == 1

Critério de seleção de particionamento:
	- Na ordem em que estão no array.

------------
Detalhes:

Método para encontrar uma boa solução viável:
	- Inicialmente, checa todos os conjuntos com quantidade de X = 2.
	- Feito isso, vê quais deles tem o maior coeficiente.
	- Se todos os coeficientes de 2 forem negativos, considera todos os casos onde
		dois coeficientes são iguais a 0.
	- Os conjuntos de 2 valores maiores possíveis são soluções viáveis.
		 
Relaxação:
	- Soma dos coeficientes de x=1 do conjunto que são indeterminados ou positivos.
	
Critério de particionamento do espaço de soluções (branch):
	- A partir de xi, i=1, cada subsolução gera dois filhos, um igual ao pai,
		outro com xi invertido
	
- Bound (lower e upper)
	- Soma de todos os coeficientes positivos possíveis ainda.
	

Percorrendo o espaço de soluções:
	- xi, i=1 a quantidade de x.
	
Critério de seleção do particionamento:
	- Busca em largura.
	
Esse método é incompleto: muito bom mas não checa todos os casos possíveis,
e pode resultar em erro.
	